# LunchBadger Example Helm Installation to Minikube
#
# notes:
# - has previous assumptions to be installed on AWS
# - can be installed on minikube with limitations like LoadBalancer references needs to be manually externalized
#   see IMPORTANT comments below

customerNamespace:
  enabled: true
actualizer:
  enabled: true
  adminOrigin: ""
  customerDomain: lunchbadger.local
  images:
    actualizer:
      tag: 0.2.50
  rbac:
    enabled: true
    pullSecret: awsecr-cred
  serverlessAPIURLTemplate: http://sls-api-$PRODUCER-$ENV.customer
  versions:
    gateway: master
    serverless: validation
    workspace: "0.2.6"
  workspaceAPIURLTemplate: http://workspace-$PRODUCER-$ENV.customer:81/api
configstore:
  enabled: true
  image:
    tag: external_push
  ingressHost: api.lunchbadger.local
gitea:
  enabled: true
  service:
    http:
      serviceType: ClusterIP
      port: 3000
      # sometimes if is necesary to access through an external port i.e. http(s)://<dns-name>:<external-port>
      #nodePort: 30280
      # be sure to switch serviceType to NodePort
      externalPort: 3000
      externalHost: localhost
    ssh:
      serviceType: NodePort
      port: 22 ######### we can't set this to some arbitrary port without actualizer init container knowing about it to do a ssh-keygen scan to create known_hosts
      nodePort: 30222
      targetPort: ssh
      ## if serving on a different external port used for determining the ssh url in the gui
      externalHost: localhost
      externalIPs:
      # IMPORTANT: if deploying to Minikube - make this your Minikube VM's IP address - `minikube ip`
      - 192.168.99.100
      externalPort: 2222
  persistence:
    enabled: true
    giteaSize: 40Gi
    postgresSize: 5Gi
    storageClass: standard
    accessMode: ReadWriteOnce
    annotations:
      "helm.sh/resource-policy": keep
#   existingGiteaClaim: lb-gitea # to reattach to pvc
#   existingPostgresClaim: lb-postgres # to reattach to pvc
  config: # automatically creates admin user
    disableInstaller: true
  adminUser: # requires config.disableInstaller:true and valid config.secretKey
    enabled: true
    username: test
    password: test
    email: test@test.com
kubeless:
  enabled: true
# using the gateway as the main point of ingress requires that you assign the external IP address manually (minikube ip) if running in minikube or setting up metalb, or opening
# up a NodePort because the gateway service is of type LoadBalancer and usually run in AWS
gateway:
  enabled: true
  global: {}
  image:
    pullPolicy: Always
    repository: expressgateway/express-gateway
    tag: v1.9.1
  jwtPublicKey: |
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7ATrA/pvXdzabRID6pBA
    A+i2zez6FG3SXw5peAV2oQUmd64JbO2vUMih4PIt5D/o6gHfzQDwI/5e8wpiNKKp
    81dpvy3uYecyfGT4x+FYQ4xj0p7dnczPlp5t1ottCXYQyyB07UZ4UsOT063CRhgi
    00HhlURBm+yjLwnlZv/VGDNzXNFX1+t+PbGC5Ab7R02Fsnp8TGfjUgzA6NDgerKi
    Jcq/fSxRb5WSB/gscCGGWjvgIJrHOLI9ofaXFpoHCxePCsVkaR0JNz8Q89tIWvWv
    5msm062aD7y1ThfP6I3HeGf3dT6IavLOVD6Wk82/WN+aaQ7BKOstglWqzjJvcEvU
    OQIDAQAB
    -----END PUBLIC KEY-----
  origin: http:/lunchbadger.local
  # IMPORTANT: make this your Minikube VM IP address - `minikube ip`
  externalIPs:
  - 192.168.99.100
  producersAPIKey: {}
  production: false
  # the ingressAddress is the backend endpoint defined by Express Gateawy to route to all Kubernetes services
  # it assumes the service is installed as `traefik` and in the `kube-system` namespace
  ingressAddress: http://traefik.kube-system
grafana:
  enabled: false
kube-watcher:
  enabled: true
  images:
    kubeWatcher:
      pullPolicy: Always
      repository: 410240865662.dkr.ecr.us-west-2.amazonaws.com/kube-watcher
      tag: v2.0.2
  ingressHost: kube-watcher.lunchbadger.local
  rbac:
    enabled: true
    pullSecret: awsecr-cred
kubernetes-dashboard:
  enabled: false
prometheus:
  enabled: false
# check values here: https://github.com/helm/charts/tree/master/stable/redis
redis:
  enabled: true
  master:
    persistence:
      storageClass: standard
graphql:
  enabled: true
storageClass: # enables AWS storage class for running LB on AWS for us-west-2a, us-west-2b availability zones
  enabled: false
storageClass2: # eanbles AWS storage class from running LB on AWS for us-west-2c availability zones
  enabled: false
storageClassCeph:
  enabled: false
  name: standard
# traefik installation not working as dependencey because it needs to be installed in `kube-system` namespace not the `default` namespace
# child chart installation to different namespaces is not supported in Helm 2.x
traefik:
  enabled: false
git-api:
  enabled: true
  pullSecret: awsecr-cred
  giteaSecret: eefa9049f13b49b1e120d8b6a9e8b88917e60122
mainIngress:
  enabled: true
  ingressHost: api.lunchbadger.local
